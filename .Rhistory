knitr::opts_chunk$set(echo = TRUE)
library(dismo)
install.packages(dismo)
install.packages("dismo")
library(dismo)
library(dismo)
Anguilla_grids
data(Anguilla_grids)
plot(Anguilla_grids)
data(acaule)
plot(acaule)
class(acaule)
head(acaule)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo
colnames(acaule)
acgeo[1:4, c(1:5,7:10)]
# install.packages(c("raster", "dismo", "rgdal", "sp", "maptools"))
library(dismo)
library(maptools)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
data(wrld_simpl)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
lonzero = subset(acgeo, lon==0)
lonzero
nrow(lonzero)
lonzero
lonzero = subset(acgeo, lon<0)
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
acgeo = subset(acgeo, lon<50)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
acgeo = subset(acgeo, lon<(-50))
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
abline(v = 50)
abline(v = -50)
acgeo = acgeo[acgeo$lon < (-50),]
abline(v = -50)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
acgeo$lon
# install.packages(c("raster", "dismo", "rgdal", "sp", "maptools"))
library(dismo)
library(maptools)
data(acaule)
data(wrld_simpl)
colnames(acaule)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo[1:4, c(1:5,7:10)]
acgeo = acgeo[acgeo$lon < (-50),]
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
# install.packages(c("raster", "dismo", "rgdal", "sp", "maptools"))
library(dismo)
library(maptools)
data(acaule)
data(wrld_simpl)
colnames(acaule)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo[1:4, c(1:5,7:10)]
acgeo = acgeo[acgeo$lon < (-50),]
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
points(lonzero$lon, lonzero$lat, col='red', cex=0.75)
acgeo = acgeo[acgeo$lon < (-50),]
points(acgeo$lon, acgeo$lat)
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
points(acgeo$lon, acgeo$lat)
points(acgeo$lon, acgeo$lat)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-60,20), axes=TRUE, col="light yellow")
colnames(acaule)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-60,20), axes=TRUE, col="light yellow")
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo[1:4, c(1:5,7:10)]
data(acaule)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo[1:4, c(1:5,7:10)]
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
points(acgeo$lon, acgeo$lat)
points(acgeo$lon, acgeo$lat, col="red")
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-55,10), axes=TRUE, col="light yellow")
points(acgeo$lon, acgeo$lat, col="red")
points(acgeo$lon, acgeo$lat, col="red", pch=0.9)
points(acgeo$lon, acgeo$lat, col="red", cex=0.9)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-55,10), axes=TRUE, col="light yellow")
points(acgeo$lon, acgeo$lat, col="red", cex=0.8)
acgeo <- acgeo[1:2,]
head(acgeo)
data(acaule)
data(wrld_simpl)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lat = acgeo$lat, lon = acgeo$lon)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
points(acgeo$lon, acgeo$lat, col="red", cex=0.8)
source('~/Dropbox/Teaching/Fons_course_2018/SDM/sdm_intro.r', echo=TRUE)
data(acaule)
data(wrld_simpl)
colnames(acaule)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-55,10), axes=TRUE, col="light yellow")
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lat = acgeo$lat, lon = acgeo$lon)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
duplicated(acgeo)
nrow(acgeo)
acgeo
acpt <- SpatialPoints(acgeo)
plot(acpt)
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
acpt <- SpatialPoints(acgeo)
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acpt <- SpatialPoints(acgeo)
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acpt <- SpatialPoints(acgeo)
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
head(acgeo)
?SpatialPoints
acpt <- SpatialPoints(coords = acgeo)
plot(acpt)
abline(h = -50)
acgeo <- acgeo[acgeo$lat < (-50),]
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[acgeo$lat < (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acpt <- SpatialPoints(coords = acgeo)
plot(acpt)
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[acgeo$lat > (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acpt <- SpatialPoints(coords = acgeo)
plot(acpt)
plot(wrld_simpl, add=T, border='grey')
acg <- SpatialPoints(coords = acgeo)
plot(acg)
raster(acg)
plot(raster(acg))
# install.packages(c("raster", "dismo", "rgdal", "sp", "maptools"))
library(dismo)
library(maptools)
data(acaule)
data(wrld_simpl)
colnames(acaule)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-55,10), axes=TRUE, col="light yellow")
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[acgeo$lat > (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acg <- SpatialPoints(coords = acgeo)
plot(acg)
plot(wrld_simpl, add=T, border='grey')
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
plot(acg, xlim=c(-70,-20), ylim=c(-60,20))
plot(wrld_simpl, add=T, border='grey')
plot(acg, xlim=c(-70,-10), ylim=c(-60,20))
plot(wrld_simpl, add=T, border='grey')
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
?rasterr
?raster
getData('SRTM', lon=5, lat=45)
getData('SRTM', lon=5, lat=45, res = 10)
getData('worldclim', var='bio', res=10)
bioclim <- getData('worldclim', var='bio', res=10)
plot(bioclim)
bioclim <- getData('worldclim', var='bio', res=1)
bioclim <- getData('worldclim', var='bio', res=2.5)
bioclim <- getData('worldclim', var='bio', res=0.5)
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
abline(h = 10)
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
abline(h = 10)
abline(h = -500)
abline(h = -50)
abline(v = -50)
abline(v = -70)
acg <- SpatialPoints(coords = acgeo)
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
abline(h = 15)
abline(h = -55)
abline(v = -40)
abline(v = -80)
abline(h = 15)
abline(h = -60)
abline(v = -30)
abline(v = -85)
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
abline(h = 15)
abline(h = -60)
abline(v = -30)
abline(v = -85)
extent
?extent
extent(c(-60,15,-30,-85))
extent(-60, c(15,-30,-85))
extent(-60, xmax = 15, ymax=-30,ymin =-85))
extent(-60, xmax = 15, ymax=-30,ymin =-85)
extent(-60, xmax = 15, ymin=-30,ymax =-85)
extent(-60, xmax = 15, ymax =-85, ymin=-30)
myext <- extent(-60, xmax = 15, ymax =-85, ymin=-30)
?crop
bc <- bioclim
bioclim
crop(bc, myext)
plot(crop(bc, myext))
myext <- extent(-60, xmax = 15, ymax =-30, ymin=-85)
myext <- extent(xmin = -60, xmax = 15, ymax =-30, ymin=-85)
myext <- extent(-85, xmax = -30, ymax = -60, ymin = 15)
myext
plot(crop(bc, myext))
save(crop(bc, myext), file = "bioclim_SAmerica.Rdata")
sa <- (crop(bc, myext))
save(crop(bc, myext), file = "bioclim_SAmerica.Rdata")
save(sa, file = "bioclim_SAmerica.Rdata")
objects()
plot(sa)
subvars <- sort (c(1, 12, 16, 17, 5,7, 8))
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
subvars
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
subvars
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
bc
sa
sa(subvars)
sa[subvars]
sa[[subvars]]
plot(sa[[subvars]])
subvars
plot(sa[[subvars]])
names(sa) <- c("AnnTemp","MaxTemp",
"MinTemp","TempSpan","MeanTWet","AnnPrecip",
"DryPrecip","ColdPrecip")
names([[sa]]) <- c("AnnTemp","MaxTemp",  "MinTemp","TempSpan",
"MeanTWet","AnnPrecip", "DryPrecip","ColdPrecip")
names(sa) <- c("AnnTemp","MaxTemp",  "MinTemp","TempSpan",
"MeanTWet","AnnPrecip", "DryPrecip","ColdPrecip")
?names
sa
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
sa <- sa[[subvars]]
library(maptools)
data(acaule)
data(wrld_simpl)
colnames(acaule)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-60,20), axes=TRUE, col="light yellow")
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[acgeo$lat > (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
acg <- SpatialPoints(coords = acgeo)
plot(acg, xlim=c(-70,-10), ylim=c(-60,15))
plot(wrld_simpl, add=T, border='grey')
abline(h = 15)
abline(h = -60)
abline(v = -30)
abline(v = -85)
myext <- extent(-85, xmax = -30, ymax = -60, ymin = 15)
points(acgeo$lon, acgeo$lat, col='red', cex=0.75)
getData('worldclim', var='tmin', res=0.5, lon=5, lat=45)
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
sa <- sa[[subvars]]
names(sa) <- c("AnnTemp","MaxTemp",  "MinTemp","TempSpan",
"MeanTWet","AnnPrecip", "DryPrecip","ColdPrecip")
objects
objects()
sa <- sa[[subvars]]
subvars <- sort (c(1, 12, 16, 17, 5, 6, 7, 8))
sa <- sa[[subvars]]
names(sa) <- c("AnnTemp","MaxTemp",  "MinTemp","TempSpan",
"MeanTWet","AnnPrecip", "DryPrecip","ColdPrecip")
plot(sa)
save(sa, file = "SA_climate.Rdata")
load("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata")
source_data("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata")
library(repmis)
install.packages(repmis)
install.packages("repmis")
source_data("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata")
library(repmis)
source_data("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata")
source_data("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata")
load(url("https://github.com/petrkeil/SDM_Leipzig/blob/master/SA_climate.Rdata"))
points
# install.packages(c("raster", "dismo", "rgdal", "sp", "maptools"))
library(dismo)
library(maptools)
data(acaule)
data(wrld_simpl)
colnames(acaule)
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-60,20), axes=TRUE, col="light yellow")
acgeo <- subset(acaule, !is.na(lon) & !is.na(lat))
acgeo <- data.frame(lon = acgeo$lon, lat = acgeo$lat)
# remove geographic outliers
acgeo <- acgeo[acgeo$lon < (-50),]
acgeo <- acgeo[acgeo$lat > (-50),]
acgeo <- acgeo[duplicated(acgeo) ==FALSE, ]
plot(acgeo, add=TRUE)
acgeo
plot(wrld_simpl, xlim=c(-70,-20), ylim=c(-60,20), axes=TRUE, col="light yellow")
dismo
?dismo
download.file(githubURL,"myfile")
sa
load("SA_climate.Rdata")
sa
solanum <- acgeo
acgeo
sa
save(sa, solanum, file = "SA_climate.Rdata")
save(sa, solanum, file = "Solanum.Rdata")
?download.file
githubURL <- "https://github.com/petrkeil/SDM_Leipzig/blob/master/data/Solanum.Rdata"
download.file(githubURL, "data/Solanum.Rdata")
githubURL <- "https://github.com/petrkeil/SDM_Leipzig/blob/master/data/Solanum.Rdata"
download.file(githubURL, "data/Solanum.Rdata")
objects
objects()
download.file(githubURL, "data/Solanum.Rdata")
load("myfile")
load("data/Solanum.Rdata")
githubURL <- "https://github.com/petrkeil/SDM_Leipzig/data/Solanum.Rdata"
download.file(githubURL, "data/Solanum.Rdata")
githubURL <- "https://github.com/petrkeil/SDM_Leipzig/blob/master/data/Solanum.Rdata"
download.file(githubURL, "data/Solanum.Rdata")
load("data/Solanum.Rdata")
download.file(githubURL)
download.file(githubURL, destfile="data/Solanum.Rdata")
load("data/Solanum.Rdata")
load("/home/pk33loci/Desktop/Solanum.Rdata")
load("data/Solanum.Rdata")
sa
plot(sa)
plot(solanum)
