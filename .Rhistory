githubURL <- "https://github.com/petrkeil/SDM_Leipzig/blob/master/data/Solanum.Rdata"
download.file(githubURL, "data/Solanum.Rdata")
load("data/Solanum.Rdata")
download.file(githubURL)
download.file(githubURL, destfile="data/Solanum.Rdata")
load("data/Solanum.Rdata")
load("/home/pk33loci/Desktop/Solanum.Rdata")
load("data/Solanum.Rdata")
sa
plot(sa)
plot(solanum)
knitr::opts_chunk$set(echo = TRUE)
library(dismo) # package for species distribution modelling
library(sdm) # another package for species distribution modelling
library(maptools); data(wrld_simpl) # world boundaries
library(sp) # package for vector layers
library(rgeos)
library(raster) # package for raster layers
file <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
bradypus <- read.table(file,  header=TRUE,  sep=',')
files <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd',
full.names=TRUE)
predictors <- stack(files)
names(predictors) <- c("MeanT","MeanP","WetP","DryP","MaxT","MinT","TRange","WetT", "biome")
library(dismo) # package for species distribution modelling
library(sdm) # another package for species distribution modelling
library(maptools); data(wrld_simpl) # world boundaries
library(sp) # package for vector layers
library(rgeos)
library(raster) # package for raster layers
file <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
bradypus <- read.table(file,  header=TRUE,  sep=',')
files <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd',
full.names=TRUE)
predictors <- stack(files)
names(predictors) <- c("MeanT","MeanP","WetP","DryP","MaxT","MinT","TRange","WetT", "biome")
brad.pts <- SpatialPoints(coords = bradypus[, c('lon', 'lat')],
proj4string = CRS(proj4string(predictors)))
plot(brad.pts)
plot(wrld_simpl, add=TRUE, border="darkgrey")
x <- circles(brad.pts, d=400000, lonlat=TRUE) # 200 km radius
pol <- polygons(x)
mask <- predictors[[1]]
v <- extract(mask, x@polygons, cellnumbers=T)
v <- do.call(rbind, v)
v <- unique(v[,1])
m <- mask
m[] <- NA
m[v] <- 1
m <- m
m[is.na(mask)] <- NA
plot(m)
plot(wrld_simpl, add=TRUE, border="darkgrey")
# presence data
set.seed(0)
pres.coords <- bradypus[, c('lon', 'lat')]
pres.pred <- extract(predictors, brad.pts)
pres <- rep(1, nrow(pres.pred))
pres.data <- data.frame(pres, pres.pred, pres.coords)
pres.data$biome <- as.factor(pres.data$biome)
# background data
abs.coords <- randomPoints(mask = m, n = 300, p = pres.coords)
colnames(abs.coords) <- c("lon", "lat")
abs.pred <- extract(predictors, abs.coords)
pres <- rep(0, nrow(abs.coords))
abs.data <- data.frame(pres, abs.pred, abs.coords)
abs.data$biome <- as.factor(abs.data$biome)
# all data
sdmdata <- rbind(pres.data, abs.data)
summary(sdmdata)
plot(lat ~ lon, data = sdmdata, col = as.factor(pres))
plot(wrld_simpl, add=TRUE, border="darkgrey")
test.id <- sort(sample(x = 1:nrow(sdmdata), size = 100))
train.id <- which(1:nrow(sdmdata) %in% test.id == FALSE)
test.data <- sdmdata[test.id,]
train.data <- sdmdata[train.id,]
m1 <- glm(pres ~ MeanT + MaxT + MeanP, data=sdmdata, family = "binomial")
summary(m1)
x <- circles(brad.pts, d=500000, lonlat=TRUE) # 200 km radius
pol <- polygons(x)
mask <- predictors[[1]]
v <- extract(mask, x@polygons, cellnumbers=T)
v <- do.call(rbind, v)
v <- unique(v[,1])
m <- mask
m[] <- NA
m[v] <- 1
m <- m
m[is.na(mask)] <- NA
plot(m)
plot(wrld_simpl, add=TRUE, border="darkgrey")
# presence data
set.seed(0)
pres.coords <- bradypus[, c('lon', 'lat')]
pres.pred <- extract(predictors, brad.pts)
pres <- rep(1, nrow(pres.pred))
pres.data <- data.frame(pres, pres.pred, pres.coords)
pres.data$biome <- as.factor(pres.data$biome)
# background data
abs.coords <- randomPoints(mask = m, n = 300, p = pres.coords)
colnames(abs.coords) <- c("lon", "lat")
abs.pred <- extract(predictors, abs.coords)
pres <- rep(0, nrow(abs.coords))
abs.data <- data.frame(pres, abs.pred, abs.coords)
abs.data$biome <- as.factor(abs.data$biome)
# all data
sdmdata <- rbind(pres.data, abs.data)
summary(sdmdata)
plot(lat ~ lon, data = sdmdata, col = as.factor(pres))
plot(wrld_simpl, add=TRUE, border="darkgrey")
test.id <- sort(sample(x = 1:nrow(sdmdata), size = 100))
train.id <- which(1:nrow(sdmdata) %in% test.id == FALSE)
test.data <- sdmdata[test.id,]
train.data <- sdmdata[train.id,]
m1 <- glm(pres ~ MeanT + MaxT + MeanP, data=sdmdata, family = "binomial")
summary(m1)
m1 <- glm(pres ~ MeanT + MaxT + MeanP, data=train.data, family = "binomial")
summary(m1)
head(train.data)
m1 <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
glm.regular <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
glm.full <- glm(pres ~ poly(MeanT,2) + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
glm.full <- glm(pres ~ poly(MeanT,2) + MeanP + WetP +
poly(DryP,2) + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
step(glm.full)
glm.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
step(glm.full)
glm.simpler <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT + biome,
data=train.data, family = "binomial")
summary(glm.simpler)
glm.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
step(glm.full)
glm.simpler <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
glm.null <- glm(pres ~ 1, data=train.data, family = "binomial")
glm.null
library(mgcv)
gam.null <- gam(pres ~ 1, data=train.data, family = "binomial")
AIC(glm.full)
AIC(glm.full, glm.simpler)
?s
gam.simpler <-  gam(pres ~ MeanP + WetP + DryP +
MaxT + MinT + WetT + biome +
s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
AIC(glm.full, glm.simpler, gam.simpler)
gam.simpler
?AIC
glm.simpler.space <-  gam(pres ~ MeanP + WetP + DryP +
MaxT + MinT + WetT + biome +
s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
summary(m1)
summary(glm.simpler.space)
AIC(glm.null, glm.full, glm.simpler, glm.simpler.space)
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
m.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
step(glm.full)
m.simpler <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
m.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
step(glm.full)
m.simpler <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
m.simpler.space <-  gam(pres ~ MeanP + WetP + DryP +
MaxT + MinT + WetT + biome +
s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
summary(m.simpler.space)
m.only.space <- gam(pres ~ s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
m.simpler.space <-  gam(pres ~ MeanP + WetP + DryP +
MaxT + MinT + WetT + biome +
s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
summary(m.simpler.space)
AIC(m.null, m.full, m.simpler, m.simpler.space, m.only.space)
BIC(m.null, m.full, m.simpler, m.simpler.space, m.only.space)
AIC(m.null, m.full, m.simpler, m.simpler.space, m.only.space)
BIC(m.null, m.full, m.simpler, m.simpler.space, m.only.space)
predict(m.simpler, newdata = test.data)
m.simpler.preds <- predict(m.simpler, newdata = test.data, type = "response")
m.simpler.preds <- predict(m.simpler, newdata = test.data, type = "response")
m.simpler.preds <- predict(m.simpler, newdata = test.data, type = "response")
m.space <- gam(pres ~ s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
m.simpler.prd <- predict(m.simpler, newdata = test.data, type = "response")
m.only.space.prd <- predict(m.space, newdata = test.data, type = "response")
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
m.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT + biome,
data=train.data, family = "binomial")
step(glm.full)
m.env <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT + biome,
data=train.data, family = "binomial")
summary(m1)
m.space <- gam(pres ~ s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
m.env.space <-  gam(pres ~ MeanP + WetP + DryP +
MaxT + MinT + WetT + biome +
s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
summary(m.env.space)
AIC(m.null, m.full, m.env, m.env.space, m.space)
BIC(m.null, m.full, m.env, m.env.space, m.space)
m.env.space.prd <- predict(m.env.space, newdata = test.data, type = "response")
m.env.prd <- predict(m.env, newdata = test.data, type = "response")
m.space.prd <- predict(m.space, newdata = test.data, type = "response")
m.env.space.prd <- predict(m.env.space, newdata = test.data, type = "response")
AIC(m.null, m.full, m.env, m.env.space, m.space)
plot(m.env.prd, test$pres)
plot(m.env.prd, test$pres)
plot(m.env.prd, test.data$pres)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.space.prd)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.space.prd)
plot(test.data$pres, m.env.space.prd)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.space.prd)
plot(test.data$pres, m.env.space.prd)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.space.prd)
plot(test.data$pres, m.env.space.prd)
plot(test.data$pres, m.env.prd)
plot(test.data$pres, m.space.prd)
plot(test.data$pres, m.env.space.prd)
plot(jitter(test.data$pres), m.env.prd)
plot(jitter(test.data$pres), m.space.prd)
plot(jitter(test.data$pres), m.env.space.prd)
boxplor(jitter(test.data$pres), m.env.prd)
boxplor(test.data$pres, m.env.prd)
boxplot(test.data$pres, m.env.prd)
plot(jitter(test.data$pres), m.env.prd)
plot(jitter(test.data$pres), m.space.prd)
plot(jitter(test.data$pres), m.env.space.prd)
par(mfrow=c(1,3))
plot(test.data$pres, m.env.prd, main = "Only environment")
plot(test.data$pres, m.space.prd = "Only space")
plot(test.data$pres, m.env.space.prd = "Space and environment")
par(mfrow=c(1,3))
plot(test.data$pres, m.env.prd, main = "Only environment")
plot(test.data$pres, m.space.prd, main = "Only space")
plot(test.data$pres, m.env.space.prd, main = "Space and environment")
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.space.prd)
roc(x = test.data$pres, p = m.env.space.prd)
par(mfrow=c(1,3))
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.space.prd)
roc(x = test.data$pres, p = m.env.space.prd)
?roc
library(SDMtools)
install.packages("SDMtools")
install.packages("SDMTools")
library(SDMTolls)
library(SDMTools)
auc(x = test.data$pres, p = m.env.prd)
?auc
auc(obs = test.data$pres, pred = m.env.prd)
par(mfrow=c(1,3))
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.space.prd)
roc(x = test.data$pres, p = m.env.space.prd)
as.data.frame(predictors)
complete.data <- as.data.frame(predictors)
head(complete.data)
head(test.data)
head(coords(predictors))
head(coordinates(predictors))
complete.data <- data.frame(complete.data,
lon = coords(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
complete.data <- data.frame(complete.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
head(complete.data)
complete.data <- as.data.frame(predictors)
complete.data <- data.frame(complete.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
complete.data$biome <- as.factor(complete.data$biome)
complete.data$biome
complete.data <- as.data.frame(predictors)
complete.data <- data.frame(complete.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
complete.data$biome <- as.factor(complete.data$biome)
nrow(complete.data)
summary(complete.data)
all.data <- as.data.frame(predictors)
all.data <- data.frame(all.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
all.data$biome <- as.factor(all.data$biome)
all.data <- as.data.frame(predictors)
all.data <- data.frame(all.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
all.data$biome <- as.factor(all.data$biome)
all.data <- as.data.frame(predictors)
all.data <- data.frame(all.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
all.data$biome <- as.factor(all.data$biome)
pred.raster <- predictors[[1]]
m.env.prd <- predict(m.env.space, newdata = all.data, type = "response")
head(all.data)
unique(all.data$biome)
unique(train.data$biome)
# remove biomes not covered by the training data
all.data <- all.data[all.data$biome %in% train.data$biome, ]
nrow(all.data)
m.env.prd <- predict(m.env.space, newdata = all.data, type = "response")
# remove biomes not covered by the training data
all.data[all.data$biome %in% train.data$biome, 'biome'] <- NA
all.data <- as.data.frame(predictors)
all.data <- data.frame(all.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
all.data$biome <- as.factor(all.data$biome)
# remove biomes not covered by the training data
all.data[all.data$biome %in% train.data$biome, 'biome'] <- NA
nrow(all.data)
m.env.prd <- predict(m.env.space, newdata = all.data, type = "response")
?predict.gam
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.omit)
head(all.data)
# remove biomes not covered by the training data
all.data[all.data$biome %in% train.data$biome, 'biome'] <- NA
# remove biomes not covered by the training data
head(all.data)
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
m.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT,
data=train.data, family = "binomial")
step(m.full)
m.env <-  glm(pres ~ MeanP + WetP + DryP + MaxT + MinT + WetT,
data=train.data, family = "binomial")
m.env <-  glm(pres ~  MeanP + DryP + MaxT + MinT + WetT,
data=train.data, family = "binomial")
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
m.full <- glm(pres ~ MeanT + MeanP + WetP +
DryP + MaxT + MinT + TRange + WetT,
data=train.data, family = "binomial")
step(m.full)
m.env <-  glm(pres ~  MeanP + DryP + MaxT + MinT + WetT,
data=train.data, family = "binomial")
m.space <- gam(pres ~ s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
m.env.space <-  gam(pres ~ MeanP + DryP + MaxT +
MinT + WetT + s(lat, lon, bs="sos"),
data=train.data, family = "binomial")
summary(m.env.space)
summary(m.env)
m.env.prd <- predict(m.env, newdata = test.data, type = "response")
m.space.prd <- predict(m.space, newdata = test.data, type = "response")
m.env.space.prd <- predict(m.env.space, newdata = test.data, type = "response")
par(mfrow=c(1,3))
roc(x = test.data$pres, p = m.env.prd)
roc(x = test.data$pres, p = m.space.prd)
roc(x = test.data$pres, p = m.env.space.prd)
all.data <- as.data.frame(predictors)
all.data <- data.frame(all.data,
lon = coordinates(predictors)[, 'x'],
lat = coordinates(predictors)[, 'y'])
all.data$biome <- as.factor(all.data$biome)
# remove biomes not covered by the training data
all.data[all.data$biome %in% train.data$biome, 'biome'] <- NA
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.omit)
pred.raster <- predictors[[1]]
pred.raster[]
pred.raster[] <- m.env.prd
nrow(all.data)
length(m.env.pred)
length(m.env.prd)
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.pass)
m.env.prd <- predict(m.env.space, newdata = all.data,
length(m.env.pred)
length(m.env.prd)
pred.raster[] <- m.env.prd
class(m.env.prd)
pred.raster[] <- as.vector(m.env.prd )
plot(pred.raster)
plot(brad.pts, add=T)
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.pass)
pred.raster <- predictors[[1]]
pred.raster[] <- as.vector(m.env.prd )
plot(pred.raster)
plot(brad.pts, add=T)
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.pass)
pred.raster <- predictors[[1]]
pred.raster[] <- as.vector(m.env.prd )
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_smpl, add=TRUE)
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_smpl, add=TRUE)
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_simpl, add=TRUE, border="darkgrey")
m.env.prd <- predict(m.env, newdata = all.data,
type = "response", na.action = na.pass)
pred.raster <- predictors[[1]]
pred.raster[] <- as.vector(m.env.prd )
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_simpl, add=TRUE, border="darkgrey")
m.env.prd <- predict(m.space, newdata = all.data,
type = "response", na.action = na.pass)
pred.raster <- predictors[[1]]
pred.raster[] <- as.vector(m.env.prd )
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_simpl, add=TRUE, border="darkgrey")
m.env.prd <- predict(m.space.env, newdata = all.data,
type = "response", na.action = na.pass)
m.env.prd <- predict(m.env.space, newdata = all.data,
type = "response", na.action = na.pass)
pred.raster <- predictors[[1]]
pred.raster[] <- as.vector(m.env.prd )
plot(brad.pts)
plot(pred.raster, add=TRUE)
plot(brad.pts, add=TRUE)
plot(wrld_simpl, add=TRUE, border="darkgrey")
plot(brad.pts)
plot(wrld_simpl, add=TRUE, border="darkgrey")
bradypus
?s
library(dismo) # package for species distribution modelling
library(sdm) # another package for species distribution modelling
library(mgcv) # package for generalized additive models
library(maptools); data(wrld_simpl) # world boundaries
library(sp) # package for vector layers
library(rgeos)
library(raster) # package for raster layers
file <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
bradypus <- read.table(file,  header=TRUE,  sep=',')
files <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd',
full.names=TRUE)
predictors <- stack(files)
names(predictors) <- c("MeanT","MeanP","WetP","DryP","MaxT","MinT","TRange","WetT", "biome")
plot(predictors)
files <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd',
full.names=TRUE)
files <- list.files(path=paste(system.file(package="dismo"), '/ex', sep=''),
pattern='grd',
full.names=TRUE)
predictors <- stack(files)
names(predictors) <- c("MeanT","MeanP","WetP","DryP","MaxT",
"MinT","TRange","WetT", "biome")
rm(list = ls())
library(dismo) # package for species distribution modelling
library(sdm) # another package for species distribution modelling
library(mgcv) # package for generalized additive models
library(maptools); data(wrld_simpl) # world boundaries
library(sp) # package for vector layers
library(rgeos)
library(raster) # package for raster layers
file <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
bradypus <- read.table(file,  header=TRUE,  sep=',')
brad.pts <- SpatialPoints(coords = bradypus[, c('lon', 'lat')],
proj4string = CRS(proj4string(predictors)))
m.null <- glm(pres ~ 1, data=train.data, family = "binomial")
